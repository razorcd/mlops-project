version: '3.7'
services:
    mlflow_server:
      restart: always
      build:
        context: .
        dockerfile: Dockerfile-mlflow
      image: mlflow_server
      container_name: mlflow_server
      ports:
        - 5051:5050
      networks:
        - backend
      volumes:
        - /tmp/mlopsdb:/tmp/mlopsdb
        - /tmp/mlopsartifacts:/tmp/mlopsartifacts
        - /tmp/store:/tmp/store

    prefect_server:
      restart: always
      build:
        context: .
        dockerfile: Dockerfile-prefect
      logging:
        driver: none
      image: "prefect_server"
      container_name: "prefect_server"
      ports:
        - "4200:4200"
        - "8080:8080"
      env_file:
        - .env
      networks:
        - backend  
      volumes:
        - /tmp/mlopsdb:/tmp/mlopsdb
        - /tmp/mlopsartifacts:/tmp/mlopsartifacts  
        - /tmp/store:/tmp/store      

    agent:
      build: .
      restart: always
      depends_on:
        - prefect_server
        - localstack
        - mlflow_server
      build:
        context: .
        dockerfile: Dockerfile-prefect-agent
      image: "prefect_agent_1"
      container_name: "prefect_agent_1"
      environment:
        REPORT_TIME_WINDOW_MINUTES: 180
        REPORTS_FOLDER: /tmp/mlreports
        MONGODB_ADDRESS: mongodb://mongo.:27017/
      volumes:
        - /tmp/mlopsdb:/tmp/mlopsdb
        - /tmp/mlopsartifacts:/tmp/mlopsartifacts
        - /tmp/store:/tmp/store
        - /tmp/mlreports:/tmp/mlreports
      networks:
        - backend  

    reports_nginx_server:
      container_name: "reports_nginx_server"
      image: "reports_nginx_server"
      build:
        context: monitoring/nginx
        dockerfile: Dockerfile  
      depends_on:
        - prefect_server
      volumes:
        - /tmp/mlreports:/tmp/mlreports
      ports:
        - "8888:8888"
      networks:
        - backend
        
    localstack:
      container_name: localstack_main
      image: localstack/localstack
      hostname: aws
      ports:
        - "4566:4566"            # LocalStack Gateway
        - "4510-4559:4510-4559"  # external services port range
      environment:
        - SERVICES=s3,kinesis
        - AWS_DEFAULT_REGION=eu-west-1
        - AWS_ACCESS_KEY_ID=ID1
        - LOCALSTACK_HOSTNAME=aws
      networks:
        - backend  
        - external

networks:
    backend:
        driver: bridge
    external:
        driver: bridge
